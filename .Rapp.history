# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days#
	if(nmeans <= 0){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) < nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}
xday.avg(tmp, 2)
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days#
	if(nmeans < 0){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) < nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
tmp = 1:10#
xday.avg(tmp, 10)
tmp = 1:10#
xday.avg(tmp, 10)
length(tmp)
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 0){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) < nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
tmp = 1:10#
xday.avg(tmp, 10)
rm(list = ls())
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) < nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}
tmp = 1:10
y = tmp
days = 10
nobs = length(y)#
	nmeans = nobs - days + 1
window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1
count
mean(y[window])
xday.avg(tmp, 10)
xdaymean
max(window)
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
tmp = 1:10#
xday.avg(tmp, 10)
xday.avg(tmp, 11)
xday.avg(tmp, 9)
plot(state_data$ReportDate, state_data$Cases, type = "b")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(plotrix)#
#
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
#Set working directory#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#load twitter image#
tw <- readPNG("twitter.png")#
#load and process covid data #
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	#read data#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	#get dates#
	fdates <- c(fdates, substr(f, 22, 31) )#
	#get tests#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	#get cases#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	#get state data#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#tidy the data#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#compute daily data#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
#
#compute first day, last day for plotting purposes#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
#
########################
####Surveillance plot#
#######################
today <- format(Sys.time(), form = "%b%d")#
#
pdf(file = paste0("Figures/co_positive_",today,".pdf"), width = 10, height = 8 )#
#
#jpeg(file = paste0("Figures/co_positive_",today,".jpeg"))#
plot(report_dates, pct_pos, type = "n", ylim = c(0, 100), xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Percent Positive Tests", side = 2, line = 2.5, cex = 1.5)#
mtext("Colorado: COVID-19 Testing", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 100, by = 10), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(report_dates, pct_pos*100, col = "darkred", lwd = 2, type = "b")#
points(report_dates, pct_pos*100, col = "darkred", pch = 16)#
text(report_dates+0.35, 63, as.character(daily_tests), srt = 45)#
text(report_dates[10] , 75, "Number of Tests", cex = 1.25, font = 2)#
#lines(report_dates, daily_tests/max(daily_tests))#
rect(max(report_dates - 6.5),85,par("usr")[2],par("usr")[4],col = "white")#
text(max(report_dates - 1.2), 99, paste("Total Tests: ", sum(daily_tests)) )#
text(max(report_dates - 2.35), 95, paste("Total Positive Tests: ", sum(daily_cases)) )#
text(max(report_dates - 2), 91, paste0("Total Pct Positive: ", round(100*sum(daily_cases)/sum(daily_tests),1) ,"%") )#
rasterImage(tw, min(report_dates)-2, 105, min(report_dates)-1 , 110, xpd = T)#
mtext("@wellerstats", at = min(report_dates)+1.5,  side = 3, line = 0.4, col = "deepskyblue2")#
#
dev.off()#
#
#####################
### Total cases plot#
#####################
plot(state_data$ReportDate, state_data$Cases, type = "b")
plot(report_dates, state_data$Cases, type = "n", ylim = c(0, 100), xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")
abline(h = seq(0, 10000, by = 10), col = "white", lwd = 1.25)
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 10000, by = 100), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")
abline(h = seq(0, 10000, by = 1000), col = "white", lwd = 1.25)
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 10000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 20000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1), ylim = c(0, max(state_data$Cases)+1000))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 20000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1), ylim = c(0, max(state_data$Cases)+1500))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 20000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")
plot(report_dates, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1), ylim = c(0, max(state_data$Cases)+1200))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 20000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")
plot(state_data$ReportDate, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1), ylim = c(0, max(state_data$Cases)+1200))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 20000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")#
points(state_data$ReportDate, state_data$Cases, col = "darkred", pch = 16)
head(state_data)
lines(state_data$ReportDate, state_data$PeopleTested)
max(state_data$PeopleTested)
nday = 5#
totalcases_xday = xday.avg(state_data$Cases, nday)#
dailycases_xday = xday.avg(state_data$daily_cases, nday)
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10))
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), lty = "b")
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), type = "l")
nday = 7#
totalcases_xday = xday.avg(state_data$Cases, nday)#
dailycases_xday = xday.avg(state_data$daily_cases, nday)#
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), type = "l")
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), type = "b")
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Log (Total Reported Cases)", ylab = "Log (Daily New Cases)")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(plotrix)#
#
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
#Set working directory#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#load twitter image#
tw <- readPNG("twitter.png")#
#load and process covid data #
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	#read data#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	#get dates#
	fdates <- c(fdates, substr(f, 22, 31) )#
	#get tests#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	#get cases#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	#get state data#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#tidy the data#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#compute daily data#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
#
#compute first day, last day for plotting purposes#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])
library(tidyverse)
gsurv <- ggplot() + geom_line(aes(x = ReportDate, y = pct_pos)) + geom_point()#
gsurv
gsurv <- ggplot() + geom_line(aes(x = ReportDate, y = pct_pos), data = state_data) + geom_point()
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos), data = state_data) + geom_line() + geom_point()
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line() + geom_point()#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests)))#
gsurv
gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests)), data = state_data)
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests)))#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45, size = 2))#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45, size = 0.8))#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45))#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 0.5)#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 1)#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 10)#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 5)#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3)#
gsurv
midpt <- round(dim(state_data)[1]/2)
midpt
midpt <- round(dim(state_data)[1]/2)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[midpt], y = 80, label = "Number of Tests"))#
gsurv
leftpt <- round(dim(state_data)[1]/4)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 4.5)#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv
library(cowplot)
install.packages("magick")
library(cowplot)#
library(magick)#
#
my_plot <- #
  ggplot(data    = iris, #
         mapping = aes(x    = Sepal.Length, #
                       fill = Species)) + #
  geom_density(alpha = 0.7)#
#
# Example with PNG (for fun, the OP's avatar - I love the raccoon)#
ggdraw() +#
  draw_image("https://i.stack.imgur.com/WDOo4.jpg?s=328&g=1") +#
  draw_plot(my_plot)
library(png)#
library(grid)#
img <- readPNG(system.file("img", "Rlogo.png", package="png"))#
g <- rasterGrob(img, interpolate=TRUE)#
#
qplot(1:10, 1:10, geom="blank") +#
  annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +#
  geom_point()
twg <- rasterGrob(tw, interpolate = T)
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv + annotation_custom(twg)
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = 90, max = 100)
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = 90, ymax = 100)
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), size = 2, data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), size = 10, data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100, size = 3), data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100),size = 10, data = state_data) + geom_line( col = "darkred") + geom_point(col = "darkred") + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 3) + geom_point(col = "darkred", size = 3) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.5) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv + geom_rect(xmin = max(ReportDate) - 1, xmax = max(ReportDate), ymin = 80, ymax = 100, color = "white")
gsurv + geom_rect(xmin = max(ReportDate) - 1, xmax = max(ReportDate), ymin = 80, ymax = 100, color = "white", data = state_data)
gsurv + geom_rect(xmin = max(state_data$ReportDate) - 1, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "white")
gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "white")
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "black", fill = "white")
gsurv <- gsurv + geom_text(aes(x = max(state_data$Report_date) - 8, y = 90, label = paste("Total Tests:", sum(state_data$daily_tests)) size = 3)
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "black", fill = "white")#
gsurv <- gsurv + geom_text(aes(x = max(state_data$Report_date) - 8, y = 90, label = paste("Total Tests:", sum(state_data$daily_tests)), size = 3)#
#
gsurv
gsurv <- gsurv + geom_text( aes(x = max(state_data$Report_date) - 8, y = 90, label = paste("Total Tests:", sum(state_data$daily_tests)), size = 3)
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "black", fill = "white")#
gsurv <- gsurv + geom_text( aes(x = max(state_data$Report_date) - 8, y = 90, label = paste("Total Tests:", sum(state_data$daily_tests)), size = 3) )#
#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "black", fill = "white")#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 8, y = 90, label = paste("Total Tests:", sum(state_data$daily_tests)), size = 3) )#
#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "black", fill = "white")#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 3) )
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 3) )#
#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 100, color = "black", fill = "white")#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 3) )#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 3) )#
#
gsurv
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 3) )#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 3) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 6, y = 92, label = paste("Pct Positive:", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 3) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 3) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 3) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste("Pct Positive:", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 3) )#
gsurv
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste("Pct Positive:", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.5) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste("Pct Positive:", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.5) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.5) )#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = 2.5 )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.5) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.5) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.5) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.35) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.35) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.35) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.0) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.0) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.0) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 1.0) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.0) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.0) )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.0) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests)), size = 2.0) )#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ), size = 2.0) )#
gsurv#
#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = 90, ymax = 100)
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases)), size = 2.0) )#
#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = 2.0 )#
#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = 8.0 )#
#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = 5.0 )#
#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = 4.5 )#
#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = bsize)#
#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = bsize)#
#
gsurv#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" )), bsize )#
gsurv
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ) )#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
bsize = 8.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = bsize)#
#
gsurv#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 98, label = paste("Total Tests:", sum(state_data$daily_cases))), size = bsize)#
#
gsurv#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:", sum(state_data$daily_tests))), size = bsize)#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 95, label = paste("Total Positive:", sum(state_data$daily_cases))), size = bsize)#
#
gsurv#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive: ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:   ", sum(state_data$daily_tests))), size = bsize)#
#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 95, label = paste("Total Positive:", sum(state_data$daily_cases))), size = bsize)#
#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 4.75, y = 92, label = paste0("Pct Positive:   ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:   ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:     ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:       ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")
gsurv <- gsurv + scale_x_continuous(labels = datelabs)
datelabs = format(report_dates, format = "%b %d")
gsurv <- gsurv + scale_x_continuous(labels = datelabs)#
gsurv
gsurv <- gsurv + scale_x_date(labels = datelabs)#
gsurv
class(state_data$ReportDate)
help(scale_x_date)
gsurv <- gsurv + scale_x_date(breaks = state_data$ReportDate, labels = datelabs)#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(breaks = state_data$ReportDate, labels = datelabs, date_minor_breaks = "2 days")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(breaks = state_data$ReportDate, labels = datelabs, date_minor_breaks = "5 days")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date__breaks = "2 days")#
gsurv
gsurv <- gsurv + scale_x_date(date_breaks = "2 days")
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b%d", date_breaks = "2 days")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b%d", date_breaks = "3 days")#
gsurv
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "3 days")#
gsurv
names(state_data)
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(col = "black")
tail(state_data)
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black")#
gtotal
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases")#
gtotal
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases")#
gtotal + stat_smooth(aes(x = ReportDate, y = Cases), data = state_data)
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases")#
gtotal + stat_smooth(aes(x = ReportDate, y = Cases), se = F, data = state_data)
gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "3 days")
gtotal
facet_wrap(facets = c(gsurv, gtotal))
grid.arrange(gsurv, gtotal)
library(gridExtra)
grid.arrange(gsurv, gtotal, nrow = 1)
###################
nday = 7#
totalcases_xday = xday.avg(state_data$Cases, nday)#
dailycases_xday = xday.avg(state_data$daily_cases, nday)#
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Log (Total Reported Cases)", ylab = "Log (Daily New Cases)")
#Load R packages#
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
#
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
#Set working directory#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#load twitter image#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#load and process covid data #
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	#read data#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	#get dates#
	fdates <- c(fdates, substr(f, 22, 31) )#
	#get tests#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	#get cases#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	#get state data#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#tidy the data#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#compute daily data#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
#
#compute first day, last day for plotting purposes#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
#
########################
####Surveillance plot: base R#
#######################
today <- format(Sys.time(), form = "%b%d")#
#
pdf(file = paste0("Figures/co_positive_",today,".pdf"), width = 10, height = 8 )#
#
#jpeg(file = paste0("Figures/co_positive_",today,".jpeg"))#
plot(report_dates, pct_pos, type = "n", ylim = c(0, 100), xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Percent Positive Tests", side = 2, line = 2.5, cex = 1.5)#
mtext("Colorado: COVID-19 Testing", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 100, by = 10), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(report_dates, pct_pos*100, col = "darkred", lwd = 2, type = "b")#
points(report_dates, pct_pos*100, col = "darkred", pch = 16)#
text(report_dates+0.35, 63, as.character(daily_tests), srt = 45)#
text(report_dates[10] , 75, "Number of Tests", cex = 1.25, font = 2)#
#lines(report_dates, daily_tests/max(daily_tests))#
rect(max(report_dates - 6.5),85,par("usr")[2],par("usr")[4],col = "white")#
text(max(report_dates - 1.2), 99, paste("Total Tests: ", sum(daily_tests)) )#
text(max(report_dates - 2.35), 95, paste("Total Positive Tests: ", sum(daily_cases)) )#
text(max(report_dates - 2), 91, paste0("Total Pct Positive: ", round(100*sum(daily_cases)/sum(daily_tests),1) ,"%") )#
rasterImage(tw, min(report_dates)-2, 105, min(report_dates)-1 , 110, xpd = T)#
mtext("@wellerstats", at = min(report_dates)+1.5,  side = 3, line = 0.4, col = "deepskyblue2")#
#
dev.off()#
#
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 4.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "3 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "3 days")#
gtotal#
grid.arrange(gsurv, gtotal, nrow = 1)#
#
#gsurv + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = 90, ymax = 100)#
#####################
### Total cases plot#
#####################
plot(state_data$ReportDate, state_data$Cases, type = "n", xlab = "", ylab = "", xaxt = "n", xlim = c(min(report_dates) - 1, max(report_dates)+1), ylim = c(0, max(state_data$Cases)+1200))#
datelabs = format(report_dates, format = "%b %d")#
#datelabs[1] = paste("pre", datelabs[1])#
axis(side = 1, at = report_dates, labels =  datelabs)#
mtext("(and previous)", side = 1, line = 1.8, at = report_dates[1], cex = 0.85)#
mtext("Date of Report", side = 1, line = 2.75, cex = 1.5)#
mtext("Total Cases", side = 2, line = 2.5, cex = 1.5)#
mtext("Total Cases", side = 3, line = 1.5, cex = 2)#
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],col = "gray")#
abline(h = seq(0, 20000, by = 500), col = "white", lwd = 1.25)#
abline(v = seq(firstd - 1 , lastd + 1, by = 1), col = "white", lwd = 1.25)#
lines(state_data$ReportDate, state_data$Cases, col = "darkred", lwd = 2, type = "b")#
#lines(state_data$ReportDate, state_data$PeopleTested)#
points(state_data$ReportDate, state_data$Cases, col = "darkred", pch = 16)#
## Total Cases vs Daily New Cases log-log#
plot( log(state_data$Cases, base = 10), log(state_data$daily_cases, base = 10), type = "b" )#
#
###################
nday = 7#
totalcases_xday = xday.avg(state_data$Cases, nday)#
dailycases_xday = xday.avg(state_data$daily_cases, nday)#
plot(log(totalcases_xday, base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Log (Total Reported Cases)", ylab = "Log (Daily New Cases)")
nday = 7#
dailycases_xday = xday.avg(state_data$daily_cases, nday)#
plot(log(state_data$Cases, base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Log (Total Reported Cases)", ylab = "Log (Daily New Cases)")
nday = 7#
dailycases_xday = xday.avg(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Log (Total Reported Cases)", ylab = "Log (Daily New Cases)")
# x-day sum function#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}
# x-day sum function#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}
# x-day sum function#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Log (Total Reported Cases)", ylab = "Log (Daily New Cases)")
state_data$Cases[-(1:nday-1)]
dailycases_xday
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)
growthdata
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line()
ggrow
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "3 days")#
gdaily
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "3 days")#
gdaily
ggrow + scale_x_log10()
ggrow + scale_x_log10() + scale_y_log10()
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + ylab("Total Confirmed Cases") + xlab("New Confimed Cases in Last Week") + scale_x_continous(trans = "log10") + scale_y_log10()#
ggrow
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + ylab("Total Confirmed Cases") + xlab("New Confimed Cases in Last Week") + scale_x_continous(trans = "log10")#
ggrow
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + ylab("Total Confirmed Cases") + xlab("New Confimed Cases in Last Week") + scale_x_continuous(trans = "log10")#
ggrow
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + ylab("Total Confirmed Cases") + xlab("New Confimed Cases in Last Week") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10")#
#
ggrow
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
#
ggrow
grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)
eftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 2.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 3) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = 4.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 3.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = bsize)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall#
#gsurv + annotation_custom(twg, xmin = r
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 90, ymax = 100, color = "black", fill = "white")#
bsize = 1.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 98, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 92, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = bsize)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 105, color = "black", fill = "white")#
bsize = 1.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 90, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = bsize)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 80, ymax = 105, color = "black", fill = "white")#
bsize = 2#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 90, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 82, label = "Number of Daily Tests"), size = bsize)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 95, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 90, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 86, label = "Number of Daily Tests"), size = bsize)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line() + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "darkred") + geom_point(col = "darkred") + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "darkred", size = 1) + geom_point(col = "darkred", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.7#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 88, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = bsize)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "darkred", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "darkred", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "darkred", size = 1) + geom_point(col = "darkred", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.7#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 88, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests", fontface = 2), size = 3)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "darkred", size = 1.0) + geom_point(col = "darkred", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.7#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 90, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 85, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "darkred", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "darkred", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "darkred", size = 1) + geom_point(col = "darkred", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 3.5#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 85, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 3.1#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 85, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 85, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2)#
gall
help(grid.arrange)
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = "Colorado Covid-19")#
gall
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3))#
gall
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )#
gall
gall + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = 90, ymax = 100)
gall = gall + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = 90, ymax = 100)
gall
maxc <- max(state_data$Cases) - 500
maxc <- max(state_data$Cases) - 500#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + 400)#
gtotal
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + 400) + geom_text(aes(x = report_dates[3],y = maxc, label = "@wellerstats"))#
gtotal
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + 400) + geom_text(aes(x = report_dates[4],y = maxc , label = "@wellerstats"))#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift , label = "@wellerstats"))#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"))#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"), col = "lightblue")#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"), col = "blue")#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"), col = "cyan3")#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"), col = "cadetblue3")#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2")#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[4],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 5)#
gtotal
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[5],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 5)#
gtotal
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[5],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 5)#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[8],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 2.5)#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 500#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[2], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[6],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )#
gall
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[3], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[6],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[3], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[6],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )#
gall
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[3], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )#
gall
mtext("hi", side = 2, line = 3)
par("usr")
rasterImage(tw, 2.8, 3.2, 3 , 3.4, xpd = T)
pdf(file = paste0("Figures/co_positive_",today,".pdf"), width = 10, height = 8 )#
gall #
dev.off()
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )
#Load R packages#
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
#
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
# x-day sum function#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#Set working directory#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#load twitter image#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#load and process covid data #
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	#read data#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	#get dates#
	fdates <- c(fdates, substr(f, 22, 31) )#
	#get tests#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	#get cases#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	#get state data#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#tidy the data#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#compute daily data#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
#
#compute first day, last day for plotting purposes#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days") + annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[3], ymin = maxc, ymax = maxc + shift) + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal#
#+ annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[3], ymin = maxc, ymax = maxc + shift)#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )
#Load R packages#
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
#
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
# x-day sum function#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#Set working directory#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#load twitter image#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#load and process covid data #
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	#read data#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	#get dates#
	fdates <- c(fdates, substr(f, 22, 31) )#
	#get tests#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	#get cases#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	#get state data#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#tidy the data#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#compute daily data#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
#
#compute first day, last day for plotting purposes#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gtotal#
#+ annotation_custom(twg, xmin = report_dates[1], xmax = report_dates[3], ymin = maxc, ymax = maxc + shift)#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
gdaily#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
ggrow #
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob("Colorado Covid-19", gp = gpar(fontsize = 20, font = 3)) )
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )#
#gall #
#dev.off()
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )
today
today_long <- format(Sys.time(), form = "%b-%d-%y")
today_long <- format(Sys.time(), form = "%b-%d-%Y")
today_long <- format(Sys.time(), form = "%b %d,%Y")
today_long
today_long <- format(Sys.time(), form = "%b %d, %Y")
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting", today_long)), gp = gpar(fontsize = 20, font = 3)) )#
#
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
#gall #
#dev.off()
today_long <- format(Sys.time(), form = "%b %d, %Y")#
#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting", today_long)), gp = gpar(fontsize = 20, font = 3)) )
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("ColoradoCovid-19 Reporting", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
#
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
#gall #
#dev.off()
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("ColoradoCovid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
#
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
#gall
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
#
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
#gall #
#dev.off()
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
#Load R packages#
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
#
# x-day average function#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
#
# x-day sum function#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#Set working directory#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#load twitter image#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#load and process covid data #
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	#read data#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	#get dates#
	fdates <- c(fdates, substr(f, 22, 31) )#
	#get tests#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	#get cases#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	#get state data#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#tidy the data#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#compute daily data#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
#
#compute first day, last day for plotting purposes#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
########################
####Surveillance plot: ggplot#
#######################
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
#gsurv#
#
#####################
### Total cases plot: ggplot#
#####################
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
#
#gtotal#
#
#####################
### Daily cases plot: ggplot#
#####################
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
#gdaily#
#
#####################
### Trajectory plot: ggplot#
#####################
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#create new data set#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
#
#ggrow #
#
######################
#Stitch figures together, save plot#
######################
#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(ggplot2)
help(scale_x_discrete)
help(scale_x_continuous)
