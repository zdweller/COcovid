library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:   ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive:  ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - 10, xmax = max(state_data$ReportDate), ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_lshift = 13#
rect_rshift = 2#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
as.Date("2020-03-26")
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "green"), alpha = 0.2)#
#
rect_lshift = 13#
rect_rshift = 2#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "Stay at Home"), alpha = 0.8)#
#
rect_lshift = 13#
rect_rshift = 2#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "Stay at Home"), alpha = 0.1)#
#
rect_lshift = 13#
rect_rshift = 2#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "Stay at Home"), alpha = .1)#
#
rect_lshift = 13#
rect_rshift = 2#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf), fill = "Stay at Home", alpha = .1)#
#
rect_lshift = 12#
rect_rshift = 1#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf), fill = "Stay at Home", alpha = .5)#
#
rect_lshift = 12#
rect_rshift = 1#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
gsurv + scale_fill_brewer(palette = "Dark2", name = "Period") + theme_bw()
gsurv + scale_fill_brewer(palette = "Dark2", name = "Period")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf), fill = "green", alpha = .5)#
#
rect_lshift = 12#
rect_rshift = 1#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
#
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf), fill = "pink", alpha = 0.2)#
#
rect_lshift = 12#
rect_rshift = 1#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")
gsurv <- gsurv + geom_rect(aes(xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf), fill = "pink", alpha = 0.2)
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")
rect_lshift = 12#
rect_rshift = 1#
gsurv <-  gsurv + geom_rect(xmin = max(state_data$ReportDate) - rect_lshift, xmax = max(state_data$ReportDate)+rect_rshift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = max(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "pink", alpha = 0.2)
gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "pink", alpha = 0.4)
max(state_data$ReportDate)
mean(state_data$ReportDate)
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - 5, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - 5, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - 5, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "pink", alpha = 0.4)
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 3#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "pink", alpha = 0.4)
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = Inf, fill = "pink", alpha = 0.4)
mean(c(50, 75))
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = 62.5, fill = "pink", alpha = 0.4)
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = 62.5, fill = "pink", alpha = 0.4)#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-04-27"), xmax = max(state_data$ReportDate), ymin = -Inf, ymax = 62.5, fill = "pink", alpha = 0.4)
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = 62.5, fill = "pink", alpha = 0.4)#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-04-26"), xmax = max(state_data$ReportDate), ymin = -Inf, ymax = 62.5, fill = "green", alpha = 0.4)
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = 62.5, fill = "red", alpha = 0.4)#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-04-26"), xmax = max(state_data$ReportDate), ymin = -Inf, ymax = 62.5, fill = "orange1", alpha = 0.4)
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 6#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 87, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-03-26"), xmax = as.Date("2020-04-26"), ymin = -Inf, ymax = 62.5, fill = "pink", alpha = 0.3)#
gsurv <- gsurv + annotate(geom = "rect", xmin = as.Date("2020-04-26"), xmax = max(state_data$ReportDate), ymin = -Inf, ymax = 62.5, fill = "yellow", alpha = 0.3)
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/10)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 5#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/7)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 3.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/6)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 3.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
mean(state_data[40:44])
mean(state_data$daily_tests[40:44])
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")
today_long <- format(Sys.time(), form = "%b %d, %Y")
today_long
today <- format(Sys.time(), form = "%b%d")
today <- "May03"
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) )
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)
install.packages("png")
install.packags("gridExtra")
install.packages("gridExtra")
install.packages("plotrix")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) )
today
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(stringr)
str_detect(files, ")")
grp(files, "<")
grp(files, "()")
grep(files, "()")
grep(files[1], "()")
grep(files[1], "")
tail(files)
length(files)
grep(files[54], ")")
grep(files[54], "\\)")
str_detect(files[54], "\\)")
str_detect(files[53], "\\)")
str_detect(files, "\\)")
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(state_data$ReportDate) - rect_shift, xmax = mean(state_data$ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(state_data$ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
nday = 7#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(state_data$daily_case)/sum(state_data$daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
rm(list = ls())
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(data = state_data, xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
gsurv <-  gsurv + geom_rect(data = state_data, xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_case)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(state_data$daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(state_data$daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("COVID-19 Website Data Files")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)
files <- list.files("Data folder")
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("COVID-19 Website Data Files/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("Data folder/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("Data folder/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	tmp <-  read_csv(paste0("Data folder/", f) )#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])
names(tmp)
tmp$value
f = files[37]
tmp <-  read_csv(paste0("Data folder/", f) )
problems()
str_detect(f, "csv")
str_detect(f, "xlsx")
library(tidyverse)
library(readxl)
tmp <- readxl(paste0("Data folder/", f))
tmp <- read_excel(paste0("Data folder/", f))
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 2.0)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "5 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 45), size = 2) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.25)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "7 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "7 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "7 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "7 days", size = 0.5)#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "7 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "7 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gtotal, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))
tmp$metric
head(state_data)
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")
gdeath<- ggplot(aes(x = ReportDate, y = 'Deaths Due'), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")
names(state_data)[6] <- "deaths"
gdeath<- ggplot(aes(x = ReportDate, y = deaths), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = deaths), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = deaths), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
state_data[55:65,]
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")
gdeath<- ggplot(aes(x = ReportDate, y = deathsacases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = deathsacases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = deathacases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = deathacases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)
daily_dac
state_data[37:42,]
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
gdeath<- ggplot(aes(x = ReportDate, y = dailey_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = dailey_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = dailey_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = dailey_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = dailey_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Reported Deaths") + ggtitle("Daily Reported Deaths") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)
max(state_data$daily_dac)
names(state_data)
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)
state_data$daily_dac = daily_dac
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)#
#
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath + geom_text(aes(x = report_dates[7],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
gdeath + geom_text(aes(x = report_dates[7],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 7.0)
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[7],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 5.0)#
gdeath
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[7],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 7.0)#
gdeath
state_data[38:43, ]
plot(state_data$deathacases)
diff(state_data$deathacases)
state_data[36:40, ]
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
state_data$daily_dac = daily_dac#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 8#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)#
#
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[7],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 7.0)#
gdeath#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gdeath, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
state_data$daily_dac = daily_dac#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 12#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)#
#
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[8],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 6.0)#
gdeath#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gdeath, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Data folder")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
state_data$daily_dac = daily_dac#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 12#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)#
#
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[8],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 5.0)#
gdeath#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gdeath, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
140000/5759000
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Case data")#
files <- files[-1]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
state_data$daily_dac = daily_dac#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 12#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)#
#
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[8],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 5.0)#
gdeath#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gdeath, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
state_data
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 12#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")
gsurv
state_data$ReportDate
tmp
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Case data")
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Case data")#
files <- files[-length(files)]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Data folder/", f) )#
	}else{#
		tmp <- read_excel(paste0("Data folder/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
state_data$daily_dac = daily_dac
tail(state_data)
files
f
library(readr)#
library(stringr)#
library(lubridate)#
library(png)#
library(grid)#
library(gridExtra)#
library(plotrix)#
library(tidyverse)#
library(readxl)#
library(stringr)#
xday.avg = function(y, days){#
	nobs = length(y)#
	nmeans = nobs - days + 1#
	if(nmeans < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaymean = rep(NA, nmeans)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaymean[count] = mean(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaymean)#
}#
xday.sum = function(y, days){#
	nobs = length(y)#
	nsums = nobs - days + 1#
	if(nsums < 1){#
		message("Error! not enough data")#
		return(0)#
	}#
	window = 1:days#
	xdaysum = rep(NA, nsums)#
	count = 1#
	while(max(window) <= nobs )#
	{#
		xdaysum[count] = sum(y[window])#
		window = window + 1#
		count = count + 1#
	}#
	return(xdaysum)#
}#
setwd("/Users/zacharyweller/Google Drive/COcovid")#
#
tw <- readPNG("twitter.png")#
twg <- rasterGrob(tw, interpolate = T)#
#
files <- list.files("Case data")#
files <- files[-length(files)]#
#
bad <- which( str_detect(files, "\\)") | str_detect(files, "xlsx") )#
files <- files[-bad]#
#
state_data <- data.frame()#
tested <- c()#
cases <- c()#
deaths <- c()#
fdates <- c()#
for(f in files){#
	if(str_detect(f, "csv")){#
		tmp <-  read_csv(paste0("Case data/", f) )#
	}else{#
		tmp <- read_excel(paste0("Case data/", f))#
		}#
	fdates <- c(fdates, substr(f, 22, 31) )#
	tested <- c(tested, as.numeric(tmp$value[4]))#
	cases <- c(cases, as.numeric(tmp$value[1]))#
	state_data <-  data.frame(rbind(state_data, as.numeric(tmp$value[1:6])) )#
}#
#
varnames <- tmp$metric[1:6]#
names(state_data) <- varnames#
names(state_data)[4] <- "PeopleTested"#
report_dates = fdates#
report_dates = date(report_dates)#
state_data$ReportDate <- report_dates#
ReportDate <- state_data$ReportDate#
#
daily_cases = diff(state_data$Cases)#
daily_cases = c(state_data$Cases[1], daily_cases)#
daily_tests = diff(state_data$PeopleTested)#
daily_tests = c(state_data$PeopleTested[1], daily_tests)#
pct_pos = daily_cases/daily_tests#
state_data$daily_cases <- daily_cases#
state_data$daily_tests <- daily_tests#
state_data$pct_pos <- pct_pos#
names(state_data)[5] <- "deathacases"#
names(state_data)[6] <- "covid19deaths"#
daily_dac= diff(state_data$deathacases)#
daily_dac = c(state_data$deathacases[1], daily_dac)#
state_data$daily_dac = daily_dac#
totalreports <- length(pct_pos)#
lastd = as.numeric(report_dates[totalreports])#
firstd = as.numeric(report_dates[1])#
leftpt <- round(dim(state_data)[1]/5)#
#
gsurv <- ggplot(aes(x = ReportDate, y = pct_pos*100), data = state_data) + geom_line( col = "red", size = 1.0) + geom_point(col = "red", size = 2) + ylim(c(0, 100)) + xlab("Date of Report") + ylab("Percent Positive Tests")#
rect_shift = 12#
gsurv <-  gsurv + geom_rect(xmin = mean(ReportDate) - rect_shift, xmax = mean(ReportDate)+rect_shift, ymin = 83, ymax = 103, color = "black", fill = "white")#
bsize = 2.8#
tshift = 0#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 100, label = paste("Total Tests:    ", sum(daily_tests))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 93, label = paste("Total Positive: ", sum(daily_cases))), size = bsize)#
gsurv <- gsurv + geom_text( aes(x = mean(ReportDate) - tshift, y = 86, label = paste0("Pct Positive:      ", round(sum(daily_cases)/sum(daily_tests)*100,1),"%" ) ), size = bsize )#
gsurv <- gsurv + geom_text(aes(x = ReportDate, y = 75, label = as.character(daily_tests), angle = 55), size = 1.25) + geom_text(aes(x =ReportDate[leftpt], y = 83, label = "Number of Daily Tests"), size = 1.5)#
gsurv <- gsurv + ggtitle("Surveillance")#
gsurv <- gsurv + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
shift = 700#
maxc <- max(state_data$Cases) - shift#
gtotal <- ggplot(aes(x = ReportDate, y = Cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Total Confirmed Cases") + ggtitle("Total Confirmed Cases")#
gtotal <- gtotal + stat_smooth(aes(x = ReportDate, y = Cases), col = "red", se = F, data = state_data)#
gtotal <- gtotal + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")  + geom_text(aes(x = report_dates[7],y = maxc+shift/2 , label = "@wellerstats"), col = "deepskyblue2", size = 3.0)#
maxdac = max(state_data$daily_dac) - 0.1*max(state_data$daily_dac)#
#
gdeath<- ggplot(aes(x = ReportDate, y = daily_dac), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Deaths Among Cases") + ggtitle("Daily Reported Deaths Among Cases") + stat_smooth(aes(x = ReportDate, y = daily_dac), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days") + geom_text(aes(x = report_dates[8],y = maxdac , label = "@wellerstats"), col = "deepskyblue2", size = 5.0)#
gdeath#
gdaily <- ggplot(aes(x = ReportDate, y = daily_cases), data = state_data) + geom_bar(stat = "identity", col = "black") + xlab("Date of Report") + ylab("Daily Confirmed Cases") + ggtitle("Daily Confirmed Cases") + stat_smooth(aes(x = ReportDate, y = daily_cases), col = "red", se = F, data = state_data) + scale_x_date(date_labels = "%b %d", date_breaks = "9 days")#
nday = 7#
dailycases_xday = xday.sum(state_data$daily_cases, nday)#
plot(log(state_data$Cases[-(1:nday-1)], base = 10), log(dailycases_xday, base = 10), type = "b", xlab = "Total Confirmed Cases) ", ylab = "New Confirmed Cases in Last Week")#
#
growthdata <- data.frame("ReportDate" = state_data$ReportDate[-(1:nday-1)], "Cases" = state_data$Cases[-(1:nday-1)],  "lastweektotal" = dailycases_xday)#
ggrow <- ggplot(data = growthdata, aes(x = Cases, y = lastweektotal)) + geom_line(col = "red", size = 1) + geom_point(col = "red", size = 2) + xlab("Total Confirmed Cases (log)") + ylab("New Confimed Cases in Last Week (log)") + scale_x_continuous(trans = "log10") + scale_y_continuous(trans = "log10") + ggtitle("Case Trajectory")#
today_long <- format(Sys.time(), form = "%b %d, %Y")#
gall <- grid.arrange(gdeath, gdaily, ggrow, gsurv, nrow = 2, top = textGrob(paste("Colorado Covid-19 Reporting: ", today_long), gp = gpar(fontsize = 20, font = 3)) ) #
today <- format(Sys.time(), form = "%b%d")#
#
ggsave(file = paste0("Figures/co_data_",today,".jpeg"), gall, width = 10, height = 8 )#
ggsave(file = paste0("Figures/co_data_",today,".pdf"), gall, width = 10, height = 8 )
library(splines)
dailycases_xday = xday.mean(state_data$daily_cases, nday)
nday = 7#
avgdailycases_xday = xday.avg(state_data$daily_cases, nday)
avgdailycases
avgdailycases_xday
plot(avgdailycases_xday)
mean(state_data$daily_cases[73:80])
mean(state_data$daily_cases[74:80])
daytmp = 1: length(avdailycases_xday)
daytmp = 1: length(avgdailycases_xday)
fx = splinefun(daytmp, avgdailycases_xday)
help(splinefun)
summary(fx)
fx = splinefun(daytmp, avgdailycases_xday, method = "natural")
fx = spline(daytmp, avgdailycases_xday, method = "natural")
fx = spline(daytmp, avgdailycases_xday, method = "natural", n = 10)
plot(fx)
fx = spline(daytmp, avgdailycases_xday, method = "natural", n = length(daytmp)/7)
fx = spline(daytmp, avgdailycases_xday, method = "natural", n = length(daytmp)/2)
fx = spline(daytmp, avgdailycases_xday, method = "natural", n = length(daytmp)/3)
plot(fx, type = "l")
points(daytmp, avgdailycases_xday, col = "red", pch = 16)
fx = spline(daytmp, avgdailycases_xday, method = "natural", n = length(daytmp)/10)#
plot(fx, type = "l")#
points(daytmp, avgdailycases_xday, col = "red", pch = 16)
fx = spline(daytmp, avgdailycases_xday, method = "natural")#
plot(fx, type = "l")#
points(daytmp, avgdailycases_xday, col = "red", pch = 16)
fxd = splinefun(daytmp, avgdailycases_xday, method = "natural")
der = fxd(daytmp, deriv = 1)
plot(der)
names(der)
summary(der)
plot(daytmp, der)
plot(daytmp, der, type = "b")
nday = 7#
avgdailycases_xday = xday.avg(state_data$daily_cases, nday)#
daytmp = 1: length(avgdailycases_xday)#
fx = spline(daytmp, avgdailycases_xday, method = "natural")#
plot(fx, type = "l")
fx = spline(daytmp, avgdailycases_xday, method = "natural", n = 5)#
plot(fx, type = "l")#
points(daytmp, avgdailycases_xday, col = "red", pch = 16)
fx = spline(daytmp, avgdailycases_xday, method = "natural",)#
plot(fx, type = "l")#
points(daytmp, avgdailycases_xday, col = "red", pch = 16)#
fxd = splinefun(daytmp, avgdailycases_xday, method = "natural")
der = fxd(daytmp, deriv = 0)
plot(daytmp, der, type = "b")#
abline(h = 0)
der = fxd(daytmp, deriv = 1)#
plot(daytmp, der, type = "b")
abline(h = 0)
plot(fx, type = "l")#
points(daytmp, avgdailycases_xday, col = "red", pch = 16)
fxd = splinefun(daytmp, avgdailycases_xday, method = "natural")#
der = fxd(daytmp, deriv = 1)#
plot(daytmp, der, type = "b")#
abline(h = 0)
der
dim(state_data)
length(der)
derivdata = data.frame(ReportDate = state_data$ReportDate[-(1:6)]), der)
derivdata = data.frame(ReportDate = state_data$ReportDate[-(1:6)], der)
derivdata
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1)
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, se = F) + geom_abline(h = 0)#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, se = F) + geom_abline(int = 0, slope = 0)#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, se = F) + geom_abline(intercept = 0, slope = 0)#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, se = F) + geom_abline(intercept = 0, slope = 0, color = "blue")#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 3)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue")#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 10)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue")#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 7)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue")#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 7)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue") + xlab("Report Date") + ylab("Derivative of Average Daily Cases in Last Week") + ggtitle("Derivative of Average Daily Cases in Last Week")
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 3)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue") + xlab("Report Date") + ylab("Derivative of Average Daily Cases in Last Week") + ggtitle("Derivative of Average Daily Cases in Last Week")#
#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 10)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue") + xlab("Report Date") + ylab("Derivative of Average Daily Cases in Last Week") + ggtitle("Derivative of Average Daily Cases in Last Week")#
#
gderiv
gderiv<- ggplot(data = derivdata, aes(x = ReportDate, y = der)) + geom_point()+  geom_smooth(col = "red", size = 1, method = "lm", formula = "y ~ bs(x, 6)", se = F) + geom_abline(intercept = 0, slope = 0, color = "blue") + xlab("Report Date") + ylab("Derivative of Average Daily Cases in Last Week") + ggtitle("Derivative of Average Daily Cases in Last Week")#
#
gderiv
